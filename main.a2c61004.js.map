{"version":3,"sources":["scripts/main.js"],"names":["gameField","document","querySelector","controls","score","messages","children","messageLose","messageWin","messageStart","fieldSize","fieldValues","displayHighScore","highScore","textContent","Math","max","parentElement","insertAdjacentHTML","innerHTML","controlInteraction","keyEvent","key","oldField","JSON","stringify","swipeLeft","fillRandomCell","renderField","swipeRight","swipeUp","swipeDown","checkForWin","checkForLose","startGame","randomRow","floor","random","randomColumn","includes","map","row","cell","concat","join","i","filter","num","j","length","updateScore","el","missingCells","zeros","Array","fill","column","forEach","push","index","value","parseInt","flat","classList","toggle","window","removeEventListener","hasEmptyCells","canMergeCells","addEventListener","clickEvent","target","matches","add","remove"],"mappings":"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","file":"main.a2c61004.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst gameField = document.querySelector('.game-field-content');\nconst controls = document.querySelector('.controls');\nconst score = controls.querySelector('.game-score');\nconst messages = [...document.querySelector('.message-container').children];\nconst [ messageLose, messageWin, messageStart ] = messages;\nconst fieldSize = 4;\nlet fieldValues = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\ncontrols.addEventListener('click', (clickEvent) => {\n  const target = clickEvent.target;\n\n  if (target.matches('.restart')) {\n    fieldValues = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    displayHighScore();\n\n    score.textContent = '0';\n\n    startGame();\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n    window.addEventListener('keyup', controlInteraction);\n  }\n\n  if (target.matches('.start')) {\n    startGame();\n\n    clickEvent.target.classList.remove('start');\n    clickEvent.target.classList.add('restart');\n    clickEvent.target.textContent = 'Restart';\n\n    messageStart.classList.add('hidden');\n  }\n});\n\nwindow.addEventListener('keyup', controlInteraction);\n\nfunction displayHighScore() {\n  const highScore = document.querySelector('.high-score');\n\n  if (highScore) {\n    highScore.textContent\n      = Math.max(score.textContent, highScore.textContent);\n  } else {\n    score.parentElement.insertAdjacentHTML('beforebegin', `\n      <p class=\"info\">\n        High\n        \\n\n        score:\n        <span class=\"game-score high-score\">${score.innerHTML}</span>\n      </p>\n    `);\n  }\n}\n\nfunction controlInteraction(keyEvent) {\n  if (keyEvent.key === 'ArrowLeft') {\n    const oldField = JSON.stringify(fieldValues);\n\n    swipeLeft();\n\n    const newField = JSON.stringify(fieldValues);\n\n    if (oldField !== newField) {\n      fillRandomCell();\n      renderField();\n    }\n  }\n\n  if (keyEvent.key === 'ArrowRight') {\n    const oldField = JSON.stringify(fieldValues);\n\n    swipeRight();\n\n    const newField = JSON.stringify(fieldValues);\n\n    if (oldField !== newField) {\n      fillRandomCell();\n      renderField();\n    }\n  }\n\n  if (keyEvent.key === 'ArrowUp') {\n    const oldField = JSON.stringify(fieldValues);\n\n    swipeUp();\n\n    const newField = JSON.stringify(fieldValues);\n\n    if (oldField !== newField) {\n      fillRandomCell();\n      renderField();\n    }\n  }\n\n  if (keyEvent.key === 'ArrowDown') {\n    const oldField = JSON.stringify(fieldValues);\n\n    swipeDown();\n\n    const newField = JSON.stringify(fieldValues);\n\n    if (oldField !== newField) {\n      fillRandomCell();\n      renderField();\n    }\n  }\n\n  checkForWin();\n  checkForLose();\n}\n\nfunction startGame() {\n  fillRandomCell();\n  fillRandomCell();\n  renderField();\n}\n\nfunction fillRandomCell() {\n  const randomRow = Math.floor(Math.random() * fieldSize);\n  const randomColumn = Math.floor(Math.random() * fieldSize);\n\n  if (!JSON.stringify(fieldValues).includes('0')) {\n    return;\n  }\n\n  if (fieldValues[randomRow][randomColumn] === 0) {\n    fieldValues[randomRow][randomColumn] = Math.random < 0.1 ? 4 : 2;\n  } else {\n    fillRandomCell();\n  }\n}\n\nfunction renderField() {\n  gameField.innerHTML = `\n    ${fieldValues.map(row => `\n        <tr class=\"field-row\">\n          ${row.map(cell => `\n            <td class=\"field-cell ${cell ? 'field-cell--'.concat(cell) : ''}\">\n              ${cell || ''}\n            </td>\n          `).join('\\n')}\n        </tr>\n    `).join('\\n')}\n  `;\n}\n\nfunction swipeRight() {\n  for (let i = 0; i < fieldSize; ++i) {\n    let row = fieldValues[i].filter(num => num);\n\n    for (let j = row.length - 1; j >= 0; --j) {\n      if (row[j] === row[j - 1]) {\n        row[j] *= 2;\n        updateScore(row[j]);\n        row[j - 1] = 0;\n\n        row = row.filter(el => el);\n      }\n    }\n\n    const missingCells = fieldValues[i].length - row.length;\n    const zeros = Array(missingCells).fill(0);\n\n    fieldValues[i] = zeros.concat(row);\n  }\n\n  renderField();\n}\n\nfunction swipeLeft() {\n  for (let i = 0; i < fieldSize; ++i) {\n    let row = fieldValues[i].filter(num => num);\n\n    for (let j = 0; j < row.length; ++j) {\n      if (row[j] === row[j + 1]) {\n        row[j + 1] *= 2;\n        updateScore(row[j + 1]);\n        row[j] = 0;\n\n        row = row.filter(el => el);\n      }\n    }\n\n    const missingCells = fieldValues[i].length - row.length;\n    const zeros = Array(missingCells).fill(0);\n\n    fieldValues[i] = row.concat(zeros);\n  }\n\n  renderField();\n}\n\nfunction swipeUp() {\n  for (let i = 0; i < fieldSize; ++i) {\n    let column = [];\n\n    fieldValues.forEach(row => {\n      column.push(row[i]);\n    });\n\n    column = column.filter(num => num);\n\n    for (let j = 0; j < column.length; ++j) {\n      if (column[j] === column[j + 1]) {\n        column[j + 1] *= 2;\n        updateScore(column[j + 1]);\n        column[j] = 0;\n        column = column.filter(num => num);\n      }\n    }\n\n    const missingCells = fieldSize - column.length;\n    const zeros = Array(missingCells).fill(0);\n\n    column = column.concat(zeros);\n\n    fieldValues.forEach((row, index) => {\n      row[i] = column[index];\n    });\n  }\n\n  renderField();\n}\n\nfunction swipeDown() {\n  for (let i = 0; i < fieldSize; ++i) {\n    let column = [];\n\n    fieldValues.forEach(row => {\n      column.push(row[i]);\n    });\n\n    column = column.filter(num => num);\n\n    for (let j = column.length; j > 0; --j) {\n      if (column[j] === column[j - 1]) {\n        column[j] *= 2;\n        updateScore(column[j]);\n        column[j - 1] = 0;\n        column = column.filter(num => num);\n      }\n    }\n\n    const missingCells = fieldSize - column.length;\n    const zeros = Array(missingCells).fill(0);\n\n    column = zeros.concat(column);\n\n    fieldValues.forEach((row, index) => {\n      row[i] = column[index];\n    });\n  }\n\n  renderField();\n}\n\nfunction updateScore(value) {\n  score.innerHTML = parseInt(score.innerHTML) + value;\n}\n\nfunction checkForWin() {\n  if (fieldValues.flat().includes(2048)) {\n    messageWin.classList.toggle('hidden');\n    window.removeEventListener('keyup', controlInteraction);\n  };\n}\n\nfunction checkForLose() {\n  const hasEmptyCells = fieldValues.flat().includes(0);\n  let canMergeCells = false;\n\n  fieldValues.forEach((row) => {\n    for (let i = 1; i < fieldSize; ++i) {\n      if (row[i] === row[i - 1]) {\n        canMergeCells = true;\n\n        return;\n      }\n    }\n  });\n\n  for (let i = 0; i < fieldValues.length; ++i) {\n    for (let j = 1; j < fieldValues[i].length; ++j) {\n      if (fieldValues[j][i] === fieldValues[j - 1][i]) {\n        canMergeCells = true;\n\n        return;\n      }\n    }\n  }\n\n  if (!hasEmptyCells && !canMergeCells) {\n    messageLose.classList.toggle('hidden');\n    window.removeEventListener('keyup', controlInteraction);\n  };\n}\n"]}